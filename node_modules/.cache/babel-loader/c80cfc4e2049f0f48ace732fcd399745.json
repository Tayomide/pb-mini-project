{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tomiwa\\\\Projects\\\\pb-mini-project\\\\src\\\\components\\\\Box.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport \"./Box.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Box = _ref => {\n  _s();\n\n  let {\n    index,\n    position,\n    data,\n    selected,\n    setSelected,\n    showCheckBox = true,\n    maxHeight = 250,\n    setBoxList,\n    boxList = 0\n  } = _ref;\n  const [checkedBox, setCheckedBox] = useState(!showCheckBox);\n\n  const boxCheck = e => {\n    if (e.target.checked) {\n      setSelected({ ...selected,\n        [index]: data\n      });\n      setCheckedBox(true);\n    } else {\n      setSelected(Object.fromEntries(Object.entries(selected).filter(_ref2 => {\n        let [key, val] = _ref2;\n        return key !== index;\n      })));\n      setCheckedBox(false);\n    }\n  };\n\n  var spanRef = useRef();\n  const [spanLength, setSpanLength] = useState(false);\n  useEffect(() => {\n    setSpanLength(spanRef.current.clientHeight === data);\n  }, [spanRef, boxList]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"box-container\",\n    style: {\n      gridColumnStart: !isNaN(position) ? parseInt(position) + 1 : 0,\n      gridColumnEnd: !isNaN(position) ? parseInt(position) + 2 : 0\n    },\n    \"data-index\": index,\n    \"data-position\": position,\n    \"data-data\": data,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `box ${checkedBox ? \"checked-box\" : \"\"}`,\n      ref: spanRef,\n      style: {\n        height: `${data}px`,\n        \"--box-height\": `${data}px`,\n        \"--box-position\": `${position}`,\n        \"--shadow-color\": `${spanLength ? \"rgb(32,76,234)\" : 'red'}`\n      },\n      children: [showCheckBox ? /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: `${data.toString().length}ch`\n        },\n        value: data,\n        type: \"number\",\n        onChange: event => {\n          setBoxList(prevBoxList => {\n            console.log(prevBoxList, event.target.value, index);\n            return { ...prevBoxList,\n              [index]: event.target.value\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 207\n      }, this), showCheckBox && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"checkbox\",\n        onInput: boxCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), !showCheckBox && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `box ${checkedBox ? \"checked-box\" : \"\"} static`,\n      \"data-index\": index,\n      \"data-position\": position,\n      \"data-data\": data,\n      style: {\n        gridColumnStart: position + 1,\n        gridColumnEnd: position + 2,\n        height: maxHeight,\n        \"--box-height\": `${data}px`,\n        \"--box-position\": `${position}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Box, \"1byzOuPi8Qox0a6+GeAYGvicjS8=\");\n\n_c = Box;\nexport default Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Box","index","position","data","selected","setSelected","showCheckBox","maxHeight","setBoxList","boxList","checkedBox","setCheckedBox","boxCheck","e","target","checked","Object","fromEntries","entries","filter","key","val","spanRef","spanLength","setSpanLength","current","clientHeight","gridColumnStart","isNaN","parseInt","gridColumnEnd","height","width","toString","length","event","prevBoxList","console","log","value"],"sources":["C:/Users/Tomiwa/Projects/pb-mini-project/src/components/Box.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport \"./Box.css\"\n\nconst Box = ({ index, position, data, selected, setSelected, showCheckBox=true, maxHeight=250, setBoxList, boxList=0}) => {\n    const [checkedBox, setCheckedBox] = useState(!showCheckBox)\n    const boxCheck = (e) => {\n        if (e.target.checked) {\n            setSelected({...selected, [index]: data})\n            setCheckedBox(true)\n        }\n        else {\n            setSelected(Object.fromEntries(Object.entries(selected).filter(([key, val]) => {\n                return key !== index\n            })))\n            setCheckedBox(false)\n        }\n    }\n\n    var spanRef = useRef()\n    const [spanLength, setSpanLength] = useState(false);\n    useEffect(() => {\n      setSpanLength(spanRef.current.clientHeight === data)\n    }, [spanRef, boxList])\n    \n    return (\n        <section className='box-container' style={{gridColumnStart: (!isNaN(position) ? parseInt(position)+1 : 0), \n        gridColumnEnd: (!isNaN(position) ? parseInt(position)+2 : 0)}} data-index={index} data-position={position} data-data={data}>\n            <span className={`box ${checkedBox ? \"checked-box\" : \"\"}`} \n            ref={spanRef}\n            style={{\n            height: `${data}px`,\n            \"--box-height\": `${data}px`,\n            \"--box-position\": `${position}`,\n            \"--shadow-color\": `${spanLength ? \"rgb(32,76,234)\" : 'red'}`\n            }}>\n            {showCheckBox ? <input\n            style={{\n                width: `${data.toString().length}ch`,\n            }}\n             value={data} type=\"number\" onChange={(event) => {setBoxList((prevBoxList) => {console.log(prevBoxList,event.target.value, index );return {...prevBoxList, [index] : event.target.value}}) }}/> : <p>{data}</p>}\n            {showCheckBox && <input type=\"checkbox\"\n            className=\"checkbox\"\n            onInput={boxCheck} />}</span>\n        {!showCheckBox &&\n        <span className={`box ${checkedBox ? \"checked-box\" : \"\"} static`} data-index={index} data-position={position} data-data={data}\n            style={{gridColumnStart: position+1, \n            gridColumnEnd: position+2,\n            height: maxHeight,\n            \"--box-height\": `${data}px`,\n            \"--box-position\": `${position}`,\n            }}>\n            </span>}\n        </section>\n    )\n}\n\nexport default Box"],"mappings":"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"},"metadata":{},"sourceType":"module"}